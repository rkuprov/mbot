# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Integration Tests on Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GOOSE_DBSTRING: ${{ vars.GOOSE_DBSTRING }}
  GOOSE_DRIVER: ${{ vars.GOOSE_DRIVER }}
  GOOSE_MIGRATION_DIR: ${{ vars.GOOSE_MIGRATION_DIR }}
  MBOT_ENV: testing

  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_USER: ${{ vars.POSTGRES_USER }}
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
  POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
  POSTGRES_DBNAME: ${{ vars.POSTGRES_DBNAME }}


jobs:
  testing-deploy-and-test-server:
    runs-on: ubuntu-latest
    environment: testing
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_DB: ${{ vars.POSTGRES_DBNAME }}
          POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest
      - name: run migrations
        run: goose up

      - name: run tests
        run: go test -v ./...

      - name: build server
        run: cd cmd/server && go build -v .
      - name: run server
        run: ./cmd/server/server

  testing-deploy-and-test-client:
    runs-on: ubuntu-latest
    environment: testing
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      - name: build client
        run: cd cmd/cli && go install -v .

      - name: run add customer
        run: cli add customer --name=john --email=doe@gmail.com --contact=none
      - name: run get customer
        run: cli get customer 1
      - name: run view customers all
        run: cli view customers --all
      - name: run add subscription
        run: cli add subscription 1 --start-date=2030-01-01 --end-date=2030-12-31
      - name: run view subscription
        run: cli view subscription --customer-id=1
      - name: run view subscription all
        run: cli view subscription --all