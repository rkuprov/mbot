# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin_password
          POSTGRES_DB: mbotdb
          POSTGRES_PORT: 5432
          POSTGRES_HOST: localhost
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
      - name: Set up env
        run : MBOT_ENV=testing
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Build
        run: go build -v ./...

      - name: install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest
      - name: Run Migrations
        run: goose -dir migrations postgres "user=admin password=admin_password host=localhost port=5432 dbname=mbotdb sslmode=disable" up
      - name: run tests
        run: go test -v ./...
